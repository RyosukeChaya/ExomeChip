names <- read.table(paste(script.dir,'ExomeChip_LociNames.csv',sep="/"),header=T,as.is=T,na.strings = ".")[,2:4]
head(name)
head(names)
head(assoc)
extra_ids <- merge(assoc,names,by.x="SNP",by.y="Chr.position ")
extra_ids <- merge(assoc,names,by.x="SNP",by.y="Chr.position")
head(extra_ids)
tail(extra_ids)
script.dir <- "/home/torres/Documents/Projects/ExomeChip/bin"
assoc <- merge(assoc,names,by.x="SNP",by.y="Chr.position")
head(assoc)
assoc_signif <- assoc[assoc["Bonf"]<=0.05,]
write.table(assoc_signif,paste(sv.dir,'assoc_signif.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
write.table(assoc,paste(sv.dir,'assoc.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
head(assoc)
write.table(assoc[$"exmID"],paste(sv.dir,'exmId_sig.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(assoc["exmID"],paste(sv.dir,'exmId_sig.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(assoc_signif["exmID"],paste(sv.dir,'exmId_sig.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
snp <- '/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/data_qced_Test/ExomeChip_LociNames.csv'
s <- read.table(snp,header=T,as.is=T,na.strings = ".")
snp_extra <- '/home/torres/Documents/Projects/ExomeChip/docs/HumanCoreExome-12v1-1_A.annotation.txt'
se <- read.table(snp_extra,header=T,as.is=T,na.strings = "")
snp_extra <- '/home/torres/Documents/Projects/ExomeChip/docs/HumanCoreExome-12v1-1_A.annotation.txt'
se <- read.table(snp_extra,header=T,as.is=T,na.strings = "")
se <- read.table(snp_extra,header=T,as.is=T)
se <- read.table(snp_extra,header=T,as.is=T,sep = "\t",na.strings = "")
head(se)
se[1:30,]
se[1:60,]
se[1:100,]
head(s)
NROW(s)
NROW(se)
head(exm)
f1<-'/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/rawdata/data.bim'#commandArgs()[7]#
exm <- read.table(f1,header=F,as.is=T)
colnames(exm) <- c("chr","Chr.position","unk","Pos","May","Min")
head(exm)
colnames(exm) <- c("chr","ID","unk","Pos","Maj","Min")
head(exm)
chid <- '/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/rawdata/New_snp_ids.txt'
head(chid)
chpid <-  read.table(chid,header=F,as.is=T)
head(chpid)
head(s)
head(se)
snp_info <- merge(s,se,by.x="exmID",by.y="Name")
head(snp_info)
NROW(snp_info)
NROW(s)
NROW(se)
NROW(snp_info)
snp_info <- merge(s,se,by.x="exmID",by.y="Name",all.x=T)
NROW(snp_info)
tail(snp_info)
head(snp_info)
snp_info[snp_info["MapInfo"]==NA]
snp_info[snp_info["MapInfo"]==NA,]
head(snp_info)
head(genes_snp)
snp_info_all <- merge(snp_info,genes_snp,by.x="RsID",by.y="refsnp_id",all.x=T)
head(snp_info_all)
colnames(snp_info_all)
snp_info_all <- snp_info_all[,c(2,1,6,8,7,4,10,9,13,11,12,4,5,6,5,3)]
head(snp_info_all)
snp_info_all <- merge(snp_info,genes_snp,by.x="RsID",by.y="refsnp_id",all.x=T)
snp_info_all <- snp_info_all[,c(2,1,6,8,7,10,9,13,11,12,4,5,6,3)]
head(snp_info_all)
NROW(genes_snp)
head(snp_info)
NROW(snp_info)
snp_info <- snp_info[,c(1,4,3,5,6,7,8,9,10,11,12,2)]
head(snp_info)
NROW(snp_info)
61193+61192
122386+61192
183579+61192
genes_snp1 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[1:61192,2],mart=snp_mart)
genes_snp2 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[61193:122385,2],mart=snp_mart)
genes_snp3 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[122386:183578,2],mart=snp_mart)
genes_snp4 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[183579:244770,2],mart=snp_mart)
122385 - 61193
61192/2
61193+30596
183579+30596
genes_snp2.1 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[61193:91789,2],mart=snp_mart)
genes_snp2.2 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[91790:122385,2],mart=snp_mart)
genes_snp4.1 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[183579:214175,2],mart=snp_mart)
genes_snp4.2 <- getBM(attributes=c("refsnp_id","ensembl_gene_stable_id"),filters=c("snp_filter"),values=snp_info[214176:244770,2],mart=snp_mart)
genes_snp <- rbind(genes_snp1,genes_snp2.1,genes_snp2.2,genes_snp3,genes_snp4.1,genes_snp4.2)
head(genes_snp)
NRWO(genes_snp)
NROW(genes_snp)
write.table(genes_snp,paste(path,"All_SNPs_genes.txt",sep=""),quote=F,sep="\t",row.names=F)
head(snp_info)
write.table(snp_info,paste(path,"ExomeChip_SNPsInfo.txt",sep=""),quote=F,sep="\t",row.names=F)
path <- '/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/data_qced_Test'
write.table(snp_info,paste(path,"ExomeChip_SNPsInfo.txt",sep=""),quote=F,sep="\t",row.names=F)
write.table(genes_snp,paste(path,"All_SNPs_genes.txt",sep="/"),quote=F,sep="\t",row.names=F)
write.table(snp_info,paste(path,"ExomeChip_SNPsInfo.txt",sep="/"),quote=F,sep="\t",row.names=F)
write.table(genes_snp,paste(path,"All_SNPs_geneVariants.txt",sep="/"),quote=F,sep="\t",row.names=F)
script.dir <- "/home/torres/Documents/Projects/ExomeChip/bin"
sv.dir <- '/home/torres/Documents/Projects/ExomeChip/results/03_16_Assoc/singleVariant'
assoc <- read.table(paste(sv.dir,"Ageing_ExomeChip_QCed.assoc",sep="/"),header=T,as.is=T)
assoc["Bonf"] <- p.adjust(assoc$"P",method="bonferroni")
assoc[is.na(assoc)] <- 1
head(assoc)
assoc <- read.table(paste(sv.dir,"Ageing_ExomeChip_QCed.assoc",sep="/"),header=T,as.is=T)
assoc["Bonf"] <- p.adjust(assoc$"P",method="bonferroni")
head(assoc)
Bonf <- p.adjust(assoc$"P",method="bonferroni")
Bonf[is.na(Bonf)] <- 1
assoc$Bonf <- Bonf
head(Bonf)
head(assoc)
names <- read.table(paste(script.dir,'ExomeChip_SNPsInfo.txt',sep="/"),header=T,as.is=T,na.strings = ".")[,2:4]
head(names#)
)
write.table(snp_info,paste(path,"ExomeChip_SNPsInfo.txt",sep="/"),quote=F,sep="\t",row.names=F)
head(snp_info)
names <- read.table(paste(script.dir,'ExomeChip_SNPsInfo.txt',sep="/"),header=T,as.is=T,na.strings = ".")[,c(1,2,3,4,9)]
head(names)
names <- read.table(paste(script.dir,'ExomeChip_SNPsInfo.txt',sep="/"),header=T,as.is=T,na.strings = ".")[,c(1,2,3,9)]
assoc <- merge(names,assoc,by.x="Chr.position",by.y="SNP")
head(assoc)
install.packages("qqman")
require(qqman)
head(assoc)
ncol(assoc)
df <- assoc(,c(3,5,6,14))
df <- assoc[,c(3,5,6,14)]
manhattan(df)
head(df)
colnames(df) <- c("SNP","CHR","BP","P")
head(df)
manhattan(df)
df <- assoc[,c(3,5,6,12)]
colnames(df) <- c("SNP","CHR","BP","P")
manhattan(df)
manhattan(df,main = "Manhattan Plot", cex = 0.5, cex.axis = 0.8, ymax = 20)
manhattan(df,main = "Manhattan Plot", cex = 0.5, cex.axis = 0.8, ymax = 12)
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=12,ylim=12)
assoc <- read.table(paste(sv.dir,"Ageing_ExomeChip_QCed.assoc",sep="/"),header=T,as.is=T)
head(asocc[complete.cases(assoc),])
head(assoc[complete.cases(assoc),])
assoc$Bonf <- p.adjust(assoc$"P",method="bonferroni")
assoc <- merge(names,assoc,by.x="Chr.position",by.y="SNP")
df <- assoc[,c(3,5,6,12)]
colnames(df) <- c("SNP","CHR","BP","P")
head(df)
head(assoc)
assoc <- read.table(paste(sv.dir,"Ageing_ExomeChip_QCed.assoc",sep="/"),header=T,as.is=T)
assoc <- assoc[complete.cases(assoc),]   # Removing rows containing NAs
assoc$Bonf <- p.adjust(assoc$"P",method="bonferroni")
head(assoc)
assoc <- merge(assoc,names,by.x="SNP",by.y="Chr.position")
head(assoc)
NROW(assoc)
df <- assoc[,c(13,2,3,9)]
colnames(df) <- c("SNP","CHR","BP","P")
head(assoc)
head(df)
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=12,ylim=12)
boxplot(df$P)
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=12,ymin=0)
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=12,ymin=0.1)
range(df$P)
range(log10(df$P))
assoc <- read.table(paste(sv.dir,"Ageing_ExomeChip_QCed.assoc",sep="/"),header=T,as.is=T)
head(assoc)
assoc <- assoc[complete.cases(assoc[,9]),]   # Removing rows containing NAs in pvalue
NROW(assoc)
assoc$Bonf <- p.adjust(assoc$"P",method="bonferroni")
assoc <- merge(assoc,names,by.x="SNP",by.y="Chr.position")
NROW(assoc)
df <- assoc[,c(13,2,3,9)]
colnames(df) <- c("SNP","CHR","BP","P")
head(df)
range(log10(df$P))
0.000000000001 <- df$P<= 0.000000000001
1e-12 <- df$P < 1e-12
df[df<1e-12] <- 1e-12
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=12,ymin=0.1)
df <- assoc[,c(13,2,3,9)]
colnames(df) <- c("SNP","CHR","BP","P")
df[df<1e-17] <- 1e-17
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
qq(df$P, main = "Q-Q plot of ExomeChip p-values")
assoc2 <- read.table('/home/torres/Documents/Projects/AffyChip/assoc_alle_individuen_60_neu.assoc',header=T,as.is=T)
assoc2 <- assoc2[complete.cases(assoc2[,9]),]   # Removing rows containing NAs in pvalue
head(assoc2)
df2 <- assoc2[,c(2,1,3,9)]
df2[df2<1e-17] <- 1e-17
manhattan(df2,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
qq(df2$P, main = "Q-Q plot of ExomeChip p-values")
qq(df$P, main = "Q-Q plot of ExomeChip p-values")
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
df[df<1e-16] <- 1e-16
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
warnings()
head(assoc)
tofilter <- assoc[assoc["P"]<=0.05,]
head(tofilter)
NROW(tofilter)
tofilter <- assoc[assoc["P"]<=0.04,]
NROW(tofilter)
tofilter <- assoc[assoc["P"]<=0.01,]
NROW(tofilter)
tocheck <- assoc[assoc["P"]<=0.05,]
tocheck <- assoc[assoc["P"]<=0.01,]
write.table(tocheck[12],paste(sv.dir,'tocheck_clusterplot.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
write.table(tocheck[12],paste(sv.dir,'tocheck_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
head(df)
scores <- read.table('/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/ClusPlot_filtering/tocheck_clusterplot.txt.scores',header=F,as.is=T)
head(scores)
yes <- scores[Scores[2]==1,1]
yes <- scores[scores[2]==1,1]
yes <- scores[scores[2]!=1,1]
no <- scores[scores[2]!=1,1]
head(names)
nochrpos <- names[names[1]%in%no,3]
length(no)
length(nochrpos)
head(no)
names[1]%in%no
head(names[1])
nochrpos <- names[names[1]%in%no]
head(nochrpos)
nochrpos <- names[names[1]%in%c(no)]
nochrpos <- names[names$exmID%in%c(no)]
nochrpos <- names[names$'exmID'%in%c(no)]
nochrpos <- names$'exmID'%in%no
head(nochrpos)
table(names$'exmID'%in%no)
nochrpos <- names[names$'exmID'%in%no),3]
nochrpos <- names[names$'exmID'%in%no,3]
head(nochrpos)
write.table(tocheck[12],paste(sv.dir,'fail_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(nochrpos,paste(sv.dir,'fail_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
assoc <- read.table(paste(sv.dir,"Ageing_ExomeChip_QCed.assoc",sep="/"),header=T,as.is=T)
assoc <- assoc[complete.cases(assoc[,9]),]   # Removing rows containing NAs in pvalue
assoc$Bonf <- p.adjust(assoc$"P",method="bonferroni")
assoc <- merge(assoc,names,by.x="SNP",by.y="Chr.position")
df <- assoc[,c(13,2,3,9)]
colnames(df) <- c("SNP","CHR","BP","P")
df[df<1e-16] <- 1e-16
manhattan(df,main = "Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
manhattan(df,main = "Ageing ExomeChip Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
qq(df$P, main = "Q-Q plot of ExomeChip p-values")
tocheck <- assoc[assoc["P"]<=1e-5,]
write.table(tocheck[12],paste(sv.dir,'tocheck_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
tocheck2 <- assoc[assoc["P"]<=1e-8,]
write.table(tocheck2[12],paste(sv.dir,'signf_tocheck_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
source(paste(script.dir,"assoc_supp.R",sep="/"))
pcaf <- '/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/stratification/data.hapmap_snps.flip.pca.evec'
famf <- '/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/data_qced_Test/Ageing_ExomeChip_QCed.fam'
famf <- '/home/torres/Documents/Projects/ExomeChip/results/02_16_QC/data_qced/Ageing_ExomeChip_QCed.fam'
fam <- read.table(famf,header=F,as.is=T) #FamilyID-IndividualID-PaternalID-MaternalID-Sex(1=M,2=F,other)-Phenotype
pca <- read.table(pcaf,header=F,as.is=T)
head(fam)
head(pca)
cov <- merge(fam[,c(1,2)],pca[,c(1:11)],by.x="V2",by.y="V1")
head(fam[,c(1,2)])
cov <- merge(fam[,c(1,2)],pca[,c(1:11)],by.x=2,by.y=1)
head(pca[,c(1:11)])
cov <- merge(fam[,c(1,2)],pca[,c(1:11)],by.x=2,by.y=1,all.x=T)
duplicated(fam[2])
head(duplicated(fam[2]))
table(duplicated(fam[2]))
table(duplicated(pca[1]))
head(fam)
head(pca)
cov <- merge(fam[,c(1,2)],pca[,c(1:11)],by.x=2,by.y=1,all.x=T)
cov <- merge(fam,pca,by.x=2,by.y=1,all.x=T)
cov <- merge(fam,pca,by.x="V2",by.y=1,all.x=T)
cov <- merge(fam,pca,by.x=2,by.y="V1",all.x=T)
cov <- merge(fam[,c(2,1)],pca,by=1,all.x=T)
cov <- merge(fam[,c(2,1)],pca,by=1)
cov <- merge(pca,fam[,c(2,1)],by=1)
cov <- merge(pca,fam[,c(2,1)],by=1,all.x=T)
fam <- fam[,c(2,1)]
head(fam)
cov <- merge(fam,pca,by=1,all.x=T)
colnames(fam) <- c("IID","FID")
colnames(pca[1]) <- "IID"
head(fam)
head(pca)
colnames(pca$"V1") <- "IID"
colnames(pca[,1]) <- "IID"
colnames(pca) <- c("IID",1,2,3,4,5,6,7,8,9,10,"Sample")
head(pca)
cov <- merge(fam,pca,by="IID",all.x=T)
head(cov)
NROW(cov)
NROW(fam)
cov <- merge(fam,pca,by="IID",all.x=T)[,-"Sample"]
cov <- merge(fam,pca,by="IID",all.x=T)[,-="Sample"]
cov <- merge(fam,pca,by="IID",all.x=T)[,c(1:12)]
head(cov)
cov <- merge(fam,pca,by="IID",all.x=T)[,c(2,1,3:12)]
head(cov)
write.table(cov,paste(sv.dir,'data.eigenval',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
assoc <- read.table(paste(sv.dir,"gcta/data_loco.loco.mlma",sep="/"),header=T,as.is=T)
loco <- read.table(paste(sv.dir,"gcta/data_loco.loco.mlma",sep="/"),header=T,as.is=T)
assoc <- read.table(paste(sv.dir,"Ageing_ExomeChip_QCed.assoc",sep="/"),header=T,as.is=T)
head(loco)
df <- loco[,c(2,1,3,9)]
df <- loco[,c(2,1,3,9)]
colnames(df) <- c("SNP","CHR","BP","P")
df[df<1e-16] <- 1e-16
manhattan(df,main = "Ageing ExomeChip MAML-loco Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
qq(df$P, main = "Q-Q plot of Ageing ExomeChip MAML-loco  p-values")
loco <- loco[complete.cases(loco[,9]),]   # Removing rows containing NAs in pvalue
df <- loco[,c(2,1,3,9)]
colnames(df) <- c("SNP","CHR","BP","P")
head(df)
df[df<1e-16] <- 1e-16
manhattan(df,main = "Ageing ExomeChip MAML-loco Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
manhattan(df,main = "Ageing ExomeChip MLMA-loco Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
df_mlma_l <- loco[,c(2,1,3,9)]
colnames(df_mlma_l) <- c("SNP","CHR","BP","P")
df_mlma_l[df_mlma_l<1e-16] <- 1e-16
qq(df_mlma_l$P, main = "Q-Q plot of Ageing ExomeChip MAML-loco  p-values")
qq(df_mlma_l$P, main = "Q-Q plot of Ageing ExomeChip MLMA-loco  p-values")
tocheck_mlma <- loco[loco["P"]<=0.01,]
tocheck_loco <- loco[loco["P"]<=1e-5,]
tocheck_loco <- loco[loco["p"]<=1e-5,]
head(tocheck_loco)
head(names)
loco <- merge(loco,names,by.x="SNP",by.y="Chr.position")
head(loco)
tocheck_loco <- loco[loco["p"]<=1e-5,]
write.table(tocheck_loco["exmID"],paste(sv.dir,'tocheck-loco_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
tocheck_loco_sig <- loco[loco["p"]<=1e-8,]
write.table(tocheck_loco_sig["exmID"],paste(sv.dir,'tocheck-loco_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
loco_covar <- read.table(paste(sv.dir,"gcta/data_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
loco_covar <- loco_covar[complete.cases(loco_covar[,9]),]   # Removing rows containing NAs in pvalue
loco_covar <- merge(loco_covar,names,by.x="SNP",by.y="Chr.position")
df_loco_covar <- loco_covar[,c("SNP","CHR","bp","p")]
head(loco_covar)
df_loco_covar <- loco_covar[,c("SNP","CHR","bp","p")]
df_loco_covar <- loco_covar[,c("SNP","Chr","bp","p")]
colnames(df_loco_covar) <- c("SNP","CHR","BP","P")
df_loco_covar[df_loco_covar<1e-16] <- 1e-16
manhattan(df_loco_covar,main = "Ageing ExomeChip covar-MLMA-loco Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
qq(df_loco_covar$P, main = "Q-Q plot of Ageing ExomeChip covar-MLMA-loco  p-values")
tocheck_loco_covar <- loco_covar[loco_covar["p"]<=1e-5,]
write.table(tocheck_loco_covar["exmID"],paste(sv.dir,'tocheck-loco_covar_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
tocheck_loco_covar_sig <- loco_covar[loco_covar["p"]<=1e-8,]
write.table(tocheck_loco_covar_sig["exmID"],paste(sv.dir,'tocheck-loco_covar_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(tocheck_loco_covar_sig,paste(sv.dir,'loco_covar_sig_SNPs.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(tocheck_loco_covar_sig,paste(sv.dir,'loco_covar_sig_SNPs.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
write.table(tocheck_loco_covar_sig,paste(sv.dir,'loco_covar_sig_SNPs.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
loco_covar <- read.table(paste(sv.dir,"gcta/dataAll_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
loco_covar <- loco_covar[complete.cases(loco_covar[,9]),]   # Removing rows containing NAs in pvalue
loco_covar <- merge(loco_covar,names,by.x="SNP",by.y="Chr.position")
df_loco_covar <- loco_covar[,c("SNP","Chr","bp","p")]
colnames(df_loco_covar) <- c("SNP","CHR","BP","P")
df_loco_covar[df_loco_covar<1e-16] <- 1e-16
manhattan(df_loco_covar,main = "Ageing ExomeChip Allcovar-MLMA-loco Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
tocheck_loco_covar_sig <- loco_covar[loco_covar["p"]<=1e-8,]
write.table(tocheck_loco_covar_sig["exmID"],paste(sv.dir,'tocheck-All-loco_covar_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(tocheck_loco_covar_sig,paste(sv.dir,'All-loco_covar_sig_SNPs.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
tocheck_loco_covar_sig <- loco_covar[loco_covar["p"]<=1e-3,]
write.table(tocheck_loco_covar_sig["exmID"],paste(sv.dir,'tocheck-All-loco_covar_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
snps <- read.table(paste(sv.dir,"tocheck-All-loco_covar_sig_clusterplot.txt.scores",sep="/"),header=T,as.is=T)
head(snps)
snps <- read.table(paste(sv.dir,"tocheck-All-loco_covar_sig_clusterplot.txt.scores",sep="/"),header=F,as.is=T)
head(snps)
snps  <- snps[snps["V2"]==1]
head(snps)
length(snps)
snps  <- snps[snps["V2"]==1,]
snps  <- snps[,snps["V2"]==1]
head(loco_covar)
snps  <- snps[snps["V2"]==1]
head(snps)
snps <- read.table(paste(sv.dir,"tocheck-All-loco_covar_sig_clusterplot.txt.scores",sep="/"),header=F,as.is=T)
snps  <- snps[snps["V2"]==1]
head(snps)
snps <- read.table(paste(sv.dir,"tocheck-All-loco_covar_sig_clusterplot.txt.scores",sep="/"),header=F,as.is=T)
colnames(snps) <- c("id","score")
k <- merege(snps,loco_covar,by.x="id",by.y="exmID")
k <- merge(snps,loco_covar,by.x="id",by.y="exmID",all.x=T)
NROW(k)
ls
head(k)
k <- subset(k,k$score==1)
NROW(k)
snps2  <- snps[snps$id==1]
nrow(snps2)
write.table(k,paste(sv.dir,'signf_clusterp.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
loco_covar <- read.table(paste(sv.dir,"dataAll_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
im.dir <- '/home/torres/Documents/Projects/ImmunoChip/results/03_16_assoc'
loco_covar <- read.table(paste(im.dir,"dataAll_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
im.dir <- '/home/torres/Documents/Projects/ImmunoChip/results/03_16_assoc'
loco_im <- read.table(paste(im.dir,"data_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
loco_im <- loco_im[complete.cases(loco_im[,9]),]   # Removing rows containing NAs in pvalue
loco_im <- merge(loco_im,names,by.x="SNP",by.y="Chr.position")
head(loco_im)
loco_im <- read.table(paste(im.dir,"data_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
head(loco_im)
loco_im <- loco_im[complete.cases(loco_im[,"p"]),]   # Removing rows containing NAs in pvalue
head(names)
loco_im <- merge(loco_im,names,by.x="SNP",by.y="RsID")
head(loco_im)
df <- assoc[,c("SNP","Chr","bp","p")]
df <- loco_im[,c("SNP","Chr","bp","p")]
df[df<1e-16] <- 1e-16
manhattan(df,main = "Ageing ImmunoChip Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
manhattan(df,main = "Ageing ImmunoChip Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
colnames(df) <- c("SNP","CHR","BP","P")
manhattan(df,main = "Ageing ImmunoChip Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
qq(df$P, main = "Q-Q plot of ExomeChip p-values")
write.table(tocheck["SNP"],paste(sv.dir,'tocheck-All-loco_covar_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
tocheck <- loco_im[loco_im["p"]<=1e-3,]
write.table(tocheck["SNP"],paste(sv.dir,'tocheck-All-loco_covar_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(tocheck,paste(sv.dir,'All-loco_covar_sig_SNPs.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
write.table(tocheck["SNP"],paste(im.dir,'tocheck-immuno_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(tocheck,paste(im.dir,'immuno-loco_covar_sig_SNPs.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
ja.dir <- "/home/torres/Documents/Projects/ExomeChip/docs/janina/"
hla.dqb1 <- read.table(paste(im.dir,"HLA-DQB1",sep="/"),header=T,as.is=T)
hla.dqb1 <- read.table(paste(ja.dir,"HLA-DQB1",sep="/"),header=T,as.is=T)
hla.dqb1 <- read.table(paste(ja.dir,"HLA-DQB1.csv",sep="/"),header=T,as.is=T)
hla.dqb1 <- read.table(paste(ja.dir,"HLA-DQB1.csv",sep="/"),header=T,as.is=T)
hla.dqb1 <- read.table(paste(ja.dir,"HLA-DQB1.csv",sep="/"),header=T,as.is=T,sep="\t")
head(hla.dqb1)
loco_im_hla.dq <- subset(loco_im,loco_im$SNP %in% hla.dqb1$Variant.ID)
head(loco_im_hla.dq)
write.table(tocheck,paste(im.dir,'hla-dqa1_immuno-loco.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
write.table(loco_im_hla.dq,paste(im.dir,'hla-dqa1_immuno-loco.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
hla.dr <- read.table(paste(ja.dir,"HLA-DR.csv",sep="/"),header=T,as.is=T,sep="\t")
hla.dr <- read.table(paste(ja.dir,"HLA-DR.csv",sep="/"),header=T,as.is=T,sep="\t")
hla.dr <- read.table(paste(ja.dir,"HLA-DR.csv",sep="/"),header=T,as.is=T,sep="\t")
hla.dr <- read.table(paste(ja.dir,"HLA-DR.csv",sep="/"),header=T,as.is=T,sep="\t",na.strings = "NA")
hla.dr <- read.table(paste(ja.dir,"HLA-DR.csv",sep="/"),header=T,as.is=T,sep="\t",na.strings = "")
hla.dr <- read.table(paste(ja.dir,"HLA-DR.csv",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
head(hla.dr)
loco_im_hla.dr <- subset(loco_im,loco_im$SNP %in% hla.dr$Variant.ID)
write.table(loco_im_hla.dr,paste(im.dir,'hla-dr_immuno-loco.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
hla.ensmbl <- read.table(paste(ja.dir,"hla.ensmbl.csv",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
hla.ensmbl <- read.table(paste(ja.dir,"hla.ensmbl",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
hla.ensmbl <- read.table(paste(ja.dir,"HLA-SNPs Ensembl",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
head(hla.ensmbl)
hla.ensmbl <- hla.ensmbl[complete.cases(hla.ensmbl[$SNP]),]
hla.ensmbl <- hla.ensmbl[complete.cases(hla.ensmbl[,1]),]
head(hla.ensmbl)
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
write.table(loco_im_hla.e,paste(im.dir,'hla-ensmbl_immuno-loco.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
head(hla.ensmbl)
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
head(loco_im_hla.e)
head(hla.ensmbl$SNP)
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
head(loco_im_hla.e)
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl[1])
head(loco_im_hla.e)
hla.ensmbl$SNP
hla.ensmbl <- read.table(paste(ja.dir,"HLA-SNPs Ensembl",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
head(loco_im_hla.e)
head(loco_im)
l <- merge(hla.ensmbl,loco_im,by="SNP",all.x=T)
head(l)
loco_im <- read.table(paste(im.dir,"data_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
loco_im <- loco_im[complete.cases(loco_im[,"p"]),]   # Removing rows containing NAs in pvalue
loco_im <- merge(loco_im,names,by.x="SNP",by.y="RsID")
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
head(loco_im_hla.e)
hla.ensmbl <- read.table(paste(ja.dir,"HLA-SNPs Ensembl",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
hla.ensmbl <- hla.ensmbl[complete.cases(hla.ensmbl[,1]),]
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
head(loco_im_hla.e)
head(hla.ensmbl)
hla.ensmbl[1]
loco_im <- merge(loco_im,names,by.x="SNP",by.y="RsID",all.x=T)
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
head(loco_im_hla.e)
loco_im$SNP=="rs477515"
table(loco_im$SNP=="rs477515")
NROW(loco_im)
im.dir <- '/home/torres/Documents/Projects/ImmunoChip/results/03_16_assoc'
loco_im <- read.table(paste(im.dir,"data_covar_loco.loco.mlma",sep="/"),header=T,as.is=T)
NROW(loco_im)
loco_im <- loco_im[complete.cases(loco_im[,"p"]),]   # Removing rows containing NAs in pvalue
NROW(loco_im)
loco_im <- merge(loco_im,names,by.x="SNP",by.y="RsID",all.x=T)
NROW(loco_im)
hla.ensmbl <- read.table(paste(ja.dir,"HLA-SNPs Ensembl",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
hla.ensmbl <- hla.ensmbl[complete.cases(hla.ensmbl[,1]),]
loco_im_hla.e <- subset(loco_im,loco_im$SNP %in% hla.ensmbl$SNP)
head(loco_im_hla.e)
write.table(loco_im_hla.e,paste(im.dir,'hla-ensmbl_immuno-loco.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
hla.dr <- read.table(paste(ja.dir,"HLA-DR.csv",sep="/"),header=T,as.is=T,sep="\t",na.strings = "",quote = "\"")
loco_im_hla.dr <- subset(loco_im,loco_im$SNP %in% hla.dr$Variant.ID)
write.table(loco_im_hla.dr,paste(im.dir,'hla-dr_immuno-loco.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
hla.dqb1 <- read.table(paste(ja.dir,"HLA-DQB1.csv",sep="/"),header=T,as.is=T,sep="\t")
loco_im_hla.dq <- subset(loco_im,loco_im$SNP %in% hla.dqb1$Variant.ID)
write.table(loco_im_hla.dq,paste(im.dir,'hla-dqa1_immuno-loco.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
NROW(loco_im)
df <- loco_im[,c("SNP","Chr","bp","p")]
colnames(df) <- c("SNP","CHR","BP","P")
df[df<1e-16] <- 1e-16
manhattan(df,main = "Ageing ImmunoChip Manhattan Plot", cex=0.5,cex.axis=0.8,ymax=18)
qq(df$P, main = "Q-Q plot of ExomeChip p-values")
tocheck <- loco_im[loco_im["p"]<=1e-3,]
write.table(tocheck["SNP"],paste(im.dir,'tocheck-immuno_sig_clusterplot.txt',sep="/"),row.names=F,col.names=F,quote=F,sep="\t")
write.table(tocheck,paste(im.dir,'immuno-loco_covar_sig_SNPs.txt',sep="/"),row.names=F,col.names=T,quote=F,sep="\t")
setRepositories()
install.packages("pathview")
setRepositories()
